{"ast":null,"code":"var _jsxFileName = \"/home/abhik/Sox/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contentCached: false,\n      updateAvailable: false\n    };\n\n    this.handleUpdate = registration => {\n      const waitingServiceWorker = registration.waiting;\n\n      if (waitingServiceWorker) {\n        waitingServiceWorker.postMessage({\n          type: 'SKIP_WAITING'\n        });\n      }\n\n      this.setState({\n        updateAvailable: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    const config = {\n      onUpdate: this.handleUpdate\n    }; // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n\n    serviceWorker.register(config);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(App, {\n      updateAvailable: this.state.updateAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/abhik/Sox/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","App","serviceWorker","Index","state","contentCached","updateAvailable","handleUpdate","registration","waitingServiceWorker","waiting","postMessage","type","setState","componentDidMount","config","onUpdate","register","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,kCAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAGA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACNC,MAAAA,aAAa,EAAE,KADT;AAENC,MAAAA,eAAe,EAAE;AAFX,KADoB;;AAAA,SAyB5BC,YAzB4B,GAyBZC,YAAD,IAAkB;AAC/B,YAAMC,oBAAoB,GAAGD,YAAY,CAACE,OAA1C;;AAEA,UAAID,oBAAJ,EAA0B;AACxBA,QAAAA,oBAAoB,CAACE,WAArB,CAAiC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAjC;AACD;;AACD,WAAKC,QAAL,CAAc;AAAEP,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAhC2B;AAAA;;AAM5BQ,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE,KAAKT;AADF,KAAf,CADkB,CAKlB;AACA;AACA;;AACAL,IAAAA,aAAa,CAACe,QAAd,CAAuBF,MAAvB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,eAAe,EAAE,KAAKd,KAAL,CAAWE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAvB2B;;AAmC9BR,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nclass Index extends Component {\n  state = {\n    contentCached: false,\n    updateAvailable: false,\n  };\n\n  componentDidMount() {\n    const config = {\n      onUpdate: this.handleUpdate,\n    };\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.register(config);\n  }\n\n  render() {\n    return (\n      <Router>\n        <App updateAvailable={this.state.updateAvailable} />\n      </Router>\n    );\n  }\n\n  handleUpdate = (registration) => {\n    const waitingServiceWorker = registration.waiting;\n\n    if (waitingServiceWorker) {\n      waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\n    }\n    this.setState({ updateAvailable: true});\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}